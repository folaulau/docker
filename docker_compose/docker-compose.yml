# docker compose for all containers locally
# docker compose up -d (https://docs.docker.com/engine/reference/commandline/compose_up/)
# docker compose down -v --rmi all (https://docs.docker.com/engine/reference/commandline/compose_down/)

version: '3.0'
services:
  elasticsearch:
    container_name: elastic-search-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2 #7.17.3 or 7.10.2
    restart: always
    environment:
    - xpack.security.enabled=false
    - discovery.type=single-node
    ports:
    - 9200:9200
    - 9300:9300
  kibana:
    container_name: kibana-container
    image: docker.elastic.co/kibana/kibana:7.10.2 #7.17.3 or 7.10.2
    restart: always
    environment:
    - ELASTICSEARCH_HOSTS=http://elastic-search-container:9200
    depends_on:
    - elasticsearch
    ports:
    - 5601:5601
  redis:
    container_name: redis-container
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
  # localstack:
  #   image: localstack/localstack:latest
  #   environment: 
  #     - AWS_DEFAULT_REGION=us-west-2
  #     - EDGE_PORT=4566
  #     - SERVICES=sqs
  #   ports:
  #     - '4566:4566'
  #   volumes:
  #     - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  # neo4j, graph database
  # neo4j:
  #   container_name: neo4j-container
  #   image: neo4j:latest
  #   restart: always
  #   environment:
  #   - NEO4J_AUTH=neo4j/pwxtest
  #   ports:
  #   - 7474:7474
  #   - 7687:7687
  # aws dynamodb
  # dynamodb:
  #   container_name: dynamodb-container
  #   image: "amazon/dynamodb-local:latest"
  #   restart: always
  #   command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - "./docker/dynamodb:/home/dynamodblocal/data"
  #   working_dir: /home/dynamodblocal

networks:
  es-net:
    driver: bridge